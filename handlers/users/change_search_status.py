from aiogram import types
from loader import dp
from keyboards.inline.user_questionare_markup import change_search_status_markup, change_search_status_callback
from utils.db_api import botdb as db


@dp.message_handler(text="–ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –¥–ª—è –ø–æ–∏—Å–∫–∞ üñåÔ∏è")
async def change_user_search_status(message: types.Message):
    user = db.get_user(message.from_user.id)
    if user is not None:
        if message.from_user.username:
            db.update_user(message.from_user.id, username=message.from_user.username)
        await message.answer(
            text="–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞—Ç—É—Å",
            reply_markup=change_search_status_markup()
        )
    else:
        await message.answer("–ß—Ç–æ–±—ã –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º, –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—ã")


@dp.callback_query_handler(change_search_status_callback.filter())
async def confirm_change_search_status(callback: types.CallbackQuery, callback_data: dict):
    await callback.answer()
    status = callback_data.get('status')
    if status == 'active':
        db.change_user_search_status(callback.from_user.id, True)
    else:
        db.change_user_search_status(callback.from_user.id, False)
    await callback.message.answer("–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω—ã")

